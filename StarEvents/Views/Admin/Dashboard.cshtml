@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - StarEvents</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/StarEvents.styles.css" asp-append-version="true" />
</head>
<body>
<div class="d-flex">
    <!-- Side Navbar -->
    <nav class="flex-shrink-0 p-3 bg-light d-flex flex-column" style="width: 250px; min-height: 100vh;">
        <div class="flex-grow-1">
            <h4 class="mb-4">Admin</h4>
            <ul class="nav nav-pills flex-column mb-auto">
                <li class="nav-item">
                    <a class="nav-link active" id="menu-dashboard" href="#" onclick="showSection('dashboard')">
                        <i class="bi bi-house-door me-2"></i>Dashboard
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="menu-users" href="#" onclick="showSection('users')">Manage Users</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="menu-discounts" href="#" onclick="showSection('discounts')">
                        <i class="bi bi-percent me-2"></i>Manage Discounts
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="menu-profile" href="@Url.Action("Profile", "Admin")">
                        <i class="bi bi-person me-2"></i>My Profile
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="menu-sales-report" href="#" onclick="showSection('sales-report')">
                        <i class="bi bi-graph-up me-2"></i>Sales Report
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="menu-users-report" href="#" onclick="showSection('users-report')">
                        <i class="bi bi-people me-2"></i>Users Report
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="menu-events-report" href="#" onclick="showSection('events-report')">
                        <i class="bi bi-calendar-event me-2"></i>Events Report
                    </a>
                </li>
            </ul>
        </div>
        <!-- Logout Button at Bottom -->
        <div class="mt-auto pt-3 border-top">
            <a href="@Url.Action("Logout", "Users")" class="btn btn-outline-danger w-100">
                <i class="bi bi-box-arrow-right me-2"></i>Logout
            </a>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="flex-grow-1 p-4">
        <!-- Success Message -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <!-- Dashboard Section -->
        <div id="section-dashboard">
            <h3><i class="bi bi-house-door me-2"></i>Dashboard Overview</h3>
            <div id="loading-dashboard" class="text-center" style="display: none;">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
            <div class="row" id="dashboard-stats">
                <!-- Stats will be loaded here -->
            </div>
        </div>

        <!-- Manage Users Section -->
        <div id="section-users">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h3>Manage Users</h3>
                <button class="btn btn-primary" onclick="openUserDialog('add')">Add User</button>
            </div>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>User Name</th>
                        <th>Email</th>
                        <th>Role</th>
                        <th>Created At</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="users-table-body">
                    @if (ViewBag.Users != null)
                    {
                        @foreach (StarEvents.Models.User user in ViewBag.Users)
                        {
                            <tr id="user-row-@user.UserId">
                                <td>@user.UserName</td>
                                <td>@user.Email</td>
                                <td>
                                    <span class="badge bg-@(user.Role == "Admin" ? "danger" : user.Role == "Organizer" ? "warning text-dark" : "primary")">
                                        @user.Role
                                    </span>
                                </td>
                                <td>@user.CreatedAt.ToString("MMM dd, yyyy")</td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <button class="btn btn-sm btn-outline-primary" onclick="openUserDialog('edit', @user.UserId)">Edit</button>
                                        <button class="btn btn-sm btn-outline-danger" onclick="deleteUser(@user.UserId)">Delete</button>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5" class="text-center text-muted">No users found</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Sales Report Section -->
        <div id="section-sales-report" style="display:none;">
            <h3><i class="bi bi-graph-up me-2"></i>Sales Report</h3>
            <div id="loading-sales-report" class="text-center" style="display: none;">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Event</th>
                        <th>Tickets Sold</th>
                        <th>Total Sales</th>
                    </tr>
                </thead>
                <tbody id="sales-report-table-body">
                    <!-- Sales report data will be loaded here -->
                </tbody>
            </table>
        </div>

        <!-- Users Report Section -->
        <div id="section-users-report" style="display:none;">
            <h3><i class="bi bi-people me-2"></i>Users Report</h3>
            <div id="loading-users-report" class="text-center" style="display: none;">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>User Name</th>
                        <th>Email</th>
                        <th>Role</th>
                        <th>Events Organized</th>
                        <th>Tickets Purchased</th>
                    </tr>
                </thead>
                <tbody id="users-report-table-body">
                    <!-- Users report data will be loaded here -->
                </tbody>
            </table>
        </div>

        <!-- Events Report Section -->
        <div id="section-events-report" style="display:none;">
            <h3><i class="bi bi-calendar-event me-2"></i>Events Report</h3>
            <div id="loading-events-report" class="text-center" style="display: none;">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Date</th>
                        <th>Location</th>
                        <th>Organizer</th>
                        <th>Tickets Sold</th>
                    </tr>
                </thead>
                <tbody id="events-report-table-body">
                    <!-- Events report data will be loaded here -->
                </tbody>
            </table>
        </div>

        <!-- Manage Discounts Section -->
        <div id="section-discounts" style="display:none;">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h3>Manage Discounts</h3>
                <button class="btn btn-primary" onclick="openDiscountDialog('add')">Add Discount</button>
            </div>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Code</th>
                        <th>Description</th>
                        <th>Percentage</th>
                        <th>Valid From</th>
                        <th>Valid To</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="discounts-table-body">
                    <!-- Discounts will be loaded here -->
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Add/Edit User Modal -->
<div class="modal fade" id="userModal" tabindex="-1" aria-labelledby="userModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="userModalLabel">Add User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="userForm">
                    <input type="hidden" id="userId" value="0" />
                    <div class="mb-3">
                        <label for="userName" class="form-label">User Name *</label>
                        <input type="text" class="form-control" id="userName" required />
                        <div class="invalid-feedback" id="userName-error"></div>
                    </div>
                    <div class="mb-3">
                        <label for="userEmail" class="form-label">Email *</label>
                        <input type="email" class="form-control" id="userEmail" required />
                        <div class="invalid-feedback" id="userEmail-error"></div>
                    </div>
                    <div class="mb-3">
                        <label for="userRole" class="form-label">Role *</label>
                        <select class="form-select" id="userRole" required>
                            <option value="">-- Select Role --</option>
                            <option value="Admin">Admin</option>
                            <option value="Organizer">Organizer</option>
                            <option value="Customer">Customer</option>
                        </select>
                        <div class="invalid-feedback" id="userRole-error"></div>
                    </div>
                    <div class="mb-3" id="password-section">
                        <label for="userPassword" class="form-label">Password <span id="password-required">*</span></label>
                        <input type="password" class="form-control" id="userPassword" />
                        <div class="invalid-feedback" id="userPassword-error"></div>
                        <small class="form-text text-muted" id="password-help">
                            <span id="password-help-add">Password must be at least 6 characters long.</span>
                            <span id="password-help-edit" style="display:none;">Leave blank to keep current password. Must be at least 6 characters if changing.</span>
                        </small>
                    </div>
                    <div class="mb-3" id="confirm-password-section">
                        <label for="confirmPassword" class="form-label">Confirm Password <span id="confirm-password-required">*</span></label>
                        <input type="password" class="form-control" id="confirmPassword" />
                        <div class="invalid-feedback" id="confirmPassword-error"></div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveUser()">Save User</button>
            </div>
        </div>
    </div>
</div>

<!-- Discount Modal -->
<div class="modal fade" id="discountModal" tabindex="-1" aria-labelledby="discountModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="discountModalLabel">Add Discount</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="discountForm">
                    <input type="hidden" id="discountId" value="0" />
                    <div class="mb-3">
                        <label for="discountCode" class="form-label">Discount Code *</label>
                        <input type="text" class="form-control" id="discountCode" required />
                        <div class="invalid-feedback" id="discountCode-error"></div>
                    </div>
                    <div class="mb-3">
                        <label for="discountDescription" class="form-label">Description</label>
                        <input type="text" class="form-control" id="discountDescription" />
                    </div>
                    <div class="mb-3">
                        <label for="discountPercentage" class="form-label">Percentage *</label>
                        <input type="number" class="form-control" id="discountPercentage" min="1" max="100" required />
                        <div class="invalid-feedback" id="discountPercentage-error"></div>
                    </div>
                    <div class="mb-3">
                        <label for="discountValidFrom" class="form-label">Valid From</label>
                        <input type="date" class="form-control" id="discountValidFrom" />
                    </div>
                    <div class="mb-3">
                        <label for="discountValidTo" class="form-label">Valid To</label>
                        <input type="date" class="form-control" id="discountValidTo" />
                    </div>
                    <div class="mb-3 form-check">
                        <input type="checkbox" class="form-check-input" id="discountIsActive" checked />
                        <label class="form-check-label" for="discountIsActive">Is Active</label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveDiscount()">Save Discount</button>
            </div>
        </div>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
<script>
    $(document).ready(function() {
        loadDashboardStats();
        loadDiscounts();
    });

    function showSection(section) {
        // Remove active class from all nav links
        document.querySelectorAll('.nav-link').forEach(link => link.classList.remove('active'));
        
        // Hide all sections
        document.getElementById('section-dashboard').style.display = 'none';
        document.getElementById('section-users').style.display = 'none';
        document.getElementById('section-sales-report').style.display = 'none';
        document.getElementById('section-users-report').style.display = 'none';
        document.getElementById('section-events-report').style.display = 'none';
        document.getElementById('section-discounts').style.display = 'none';
        
        // Show selected section and activate corresponding nav link
        if (section === 'dashboard') {
            document.getElementById('section-dashboard').style.display = 'block';
            document.getElementById('menu-dashboard').classList.add('active');
            loadDashboardStats();
        } else if (section === 'users') {
            document.getElementById('section-users').style.display = 'block';
            document.getElementById('menu-users').classList.add('active');
        } else if (section === 'discounts') {
            document.getElementById('section-discounts').style.display = 'block';
            document.getElementById('menu-discounts').classList.add('active');
            loadDiscounts();
        } else if (section === 'sales-report') {
            document.getElementById('section-sales-report').style.display = 'block';
            document.getElementById('menu-sales-report').classList.add('active');
            loadSalesReport();
        } else if (section === 'users-report') {
            document.getElementById('section-users-report').style.display = 'block';
            document.getElementById('menu-users-report').classList.add('active');
            loadUsersReport();
        } else if (section === 'events-report') {
            document.getElementById('section-events-report').style.display = 'block';
            document.getElementById('menu-events-report').classList.add('active');
            loadEventsReport();
        }
    }
    
    function openUserDialog(mode, userId = null) {
        // Clear previous validation errors
        clearValidationErrors();
        
        if (mode === 'add') {
            document.getElementById('userModalLabel').innerText = 'Add User';
            document.getElementById('userForm').reset();
            document.getElementById('userId').value = '0';
            
            // Show password as required for new users
            document.getElementById('password-required').style.display = 'inline';
            document.getElementById('confirm-password-required').style.display = 'inline';
            document.getElementById('userPassword').required = true;
            document.getElementById('confirmPassword').required = true;
            document.getElementById('password-help-add').style.display = 'inline';
            document.getElementById('password-help-edit').style.display = 'none';
            
        } else if (mode === 'edit' && userId) {
            document.getElementById('userModalLabel').innerText = 'Edit User';
            document.getElementById('userId').value = userId;
            
            // Password is optional for editing
            document.getElementById('password-required').style.display = 'none';
            document.getElementById('confirm-password-required').style.display = 'none';
            document.getElementById('userPassword').required = false;
            document.getElementById('confirmPassword').required = false;
            document.getElementById('password-help-add').style.display = 'none';
            document.getElementById('password-help-edit').style.display = 'inline';
            
            // Load user data
            loadUserData(userId);
        }
        
        var userModal = new bootstrap.Modal(document.getElementById('userModal'));
        userModal.show();
    }
    
    function loadUserData(userId) {
        fetch(`/Admin/GetUser/${userId}`)
            .then(response => response.json())
            .then(data => {
                document.getElementById('userName').value = data.userName;
                document.getElementById('userEmail').value = data.email;
                document.getElementById('userRole').value = data.role;
                // Clear password fields for editing
                document.getElementById('userPassword').value = '';
                document.getElementById('confirmPassword').value = '';
            })
            .catch(error => {
                showAlert('Error loading user data: ' + error.message, 'danger');
            });
    }
    
    function saveUser() {
        // Clear previous validation errors
        clearValidationErrors();
        
        const formData = new FormData();
        const userId = document.getElementById('userId').value;
        const isEdit = userId !== '0';
        
        formData.append('UserId', userId);
        formData.append('UserName', document.getElementById('userName').value);
        formData.append('Email', document.getElementById('userEmail').value);
        formData.append('Role', document.getElementById('userRole').value);
        formData.append('Password', document.getElementById('userPassword').value);
        formData.append('ConfirmPassword', document.getElementById('confirmPassword').value);
        formData.append('IsEdit', isEdit);
        
        // Add anti-forgery token
        const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value;
        if (token) {
            formData.append('__RequestVerificationToken', token);
        }
        
        fetch('/Admin/SaveUser', {
            method: 'POST',
            body: formData,
            headers: {
                'RequestVerificationToken': token
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showAlert(data.message, 'success');
                $('#userModal').modal('hide');
                // Reload the page to refresh the user list
                setTimeout(() => window.location.reload(), 1000);
            } else {
                showAlert(data.message, 'danger');
            }
        })
        .catch(error => {
            showAlert('Error saving user: ' + error.message, 'danger');
        });
    }
    
    function deleteUser(userId) {
        if (confirm('Are you sure you want to delete this user? This action cannot be undone.')) {
            fetch(`/Admin/DeleteUser/${userId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showAlert(data.message, 'success');
                    // Remove the row from table
                    document.getElementById(`user-row-${userId}`).remove();
                } else {
                    showAlert(data.message, 'danger');
                }
            })
            .catch(error => {
                showAlert('Error deleting user: ' + error.message, 'danger');
            });
        }
    }
    
    function showAlert(message, type) {
        const alertContainer = document.getElementById('alertContainer');
        const alertHtml = `
            <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        `;
        alertContainer.innerHTML = alertHtml;
        
        // Auto-hide success messages after 3 seconds
        if (type === 'success') {
            setTimeout(() => {
                const alert = alertContainer.querySelector('.alert');
                if (alert) {
                    bootstrap.Alert.getOrCreateInstance(alert).close();
                }
            }, 3000);
        }
    }
    
    function clearValidationErrors() {
        document.querySelectorAll('.is-invalid').forEach(el => el.classList.remove('is-invalid'));
        document.querySelectorAll('.invalid-feedback').forEach(el => el.textContent = '');
    }
    
    // Add validation for password confirmation
    document.getElementById('confirmPassword').addEventListener('input', function() {
        const password = document.getElementById('userPassword').value;
        const confirmPassword = this.value;
        
        if (password && confirmPassword && password !== confirmPassword) {
            this.classList.add('is-invalid');
            document.getElementById('confirmPassword-error').textContent = 'Passwords do not match.';
        } else {
            this.classList.remove('is-invalid');
            document.getElementById('confirmPassword-error').textContent = '';
        }
    });

    function loadDashboardStats() {
        $('#loading-dashboard').show();
        $.get('@Url.Action("GetDashboardStats", "Admin")')
            .done(function(response) {
                if (response.success) {
                    displayDashboardStats(response.data);
                } else {
                    showAlert('Error', response.message, 'error');
                }
            })
            .fail(function() {
                showAlert('Error', 'Failed to load dashboard stats. Please try again.', 'error');
            })
            .always(function() {
                $('#loading-dashboard').hide();
            });
    }

    function displayDashboardStats(data) {
        const statsContainer = $('#dashboard-stats');
        statsContainer.empty();

        const statsHtml = `
            <div class="col-md-3 mb-4">
                <div class="card text-center">
                    <div class="card-body">
                        <i class="bi bi-people display-4 text-primary"></i>
                        <h4 class="card-title">${data.totalUsers}</h4>
                        <p class="card-text">Total Users</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-4">
                <div class="card text-center">
                    <div class="card-body">
                        <i class="bi bi-calendar-event display-4 text-success"></i>
                        <h4 class="card-title">${data.totalEvents}</h4>
                        <p class="card-text">Total Events</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-4">
                <div class="card text-center">
                    <div class="card-body">
                        <i class="bi bi-check-circle display-4 text-warning"></i>
                        <h4 class="card-title">${data.activeEvents}</h4>
                        <p class="card-text">Active Events</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-4">
                <div class="card text-center">
                    <div class="card-body">
                        <i class="bi bi-ticket-perforated display-4 text-info"></i>
                        <h4 class="card-title">${data.totalTicketsSold}</h4>
                        <p class="card-text">Tickets Sold</p>
                    </div>
                </div>
            </div>
            <div class="col-md-6 mb-4">
                <div class="card text-center">
                    <div class="card-body">
                        <i class="bi bi-cash display-4 text-secondary"></i>
                        <h4 class="card-title">$${parseFloat(data.totalRevenue).toFixed(2)}</h4>
                        <p class="card-text">Total Revenue</p>
                    </div>
                </div>
            </div>
        `;
        statsContainer.html(statsHtml);
    }

    function loadSalesReport() {
        $('#loading-sales-report').show();
        $.get('@Url.Action("GetSalesReport", "Admin")')
            .done(function(response) {
                if (response.success) {
                    displaySalesReport(response.data);
                } else {
                    showAlert('Error', response.message, 'error');
                }
            })
            .fail(function() {
                showAlert('Error', 'Failed to load sales report. Please try again.', 'error');
            })
            .always(function() {
                $('#loading-sales-report').hide();
            });
    }

    function displaySalesReport(data) {
        const tbody = $('#sales-report-table-body');
        tbody.empty();
        
        if (data.length === 0) {
            tbody.append('<tr><td colspan="3" class="text-center">No sales data available.</td></tr>');
            return;
        }
        
        data.forEach(function(item) {
            const row = `
                <tr>
                    <td>${item.eventTitle}</td>
                    <td>${item.ticketsSold}</td>
                    <td>$${parseFloat(item.totalSales).toFixed(2)}</td>
                </tr>
            `;
            tbody.append(row);
        });
    }

    function loadUsersReport() {
        $('#loading-users-report').show();
        $.get('@Url.Action("GetUsersReport", "Admin")')
            .done(function(response) {
                if (response.success) {
                    displayUsersReport(response.data);
                } else {
                    showAlert('Error', response.message, 'error');
                }
            })
            .fail(function() {
                showAlert('Error', 'Failed to load users report. Please try again.', 'error');
            })
            .always(function() {
                $('#loading-users-report').hide();
            });
    }

    function displayUsersReport(data) {
        const tbody = $('#users-report-table-body');
        tbody.empty();
        
        if (data.length === 0) {
            tbody.append('<tr><td colspan="5" class="text-center">No users report data available.</td></tr>');
            return;
        }
        
        data.forEach(function(item) {
            const row = `
                <tr>
                    <td>${item.userName}</td>
                    <td>${item.email}</td>
                    <td>${item.role}</td>
                    <td>${item.eventsOrganized}</td>
                    <td>${item.ticketsPurchased}</td>
                </tr>
            `;
            tbody.append(row);
        });
    }

    function loadDiscounts() {
        $.get('@Url.Action("GetDiscounts", "Admin")')
            .done(function(response) {
                if (response.success) {
                    displayDiscounts(response.data);
                } else {
                    showAlert('Error', response.message, 'error');
                }
            })
            .fail(function() {
                showAlert('Error', 'Failed to load discounts.', 'error');
            });
    }

    function displayDiscounts(discounts) {
        const tbody = $('#discounts-table-body');
        tbody.empty();
        
        if (discounts.length === 0) {
            tbody.append('<tr><td colspan="7" class="text-center">No discounts found</td></tr>');
            return;
        }
        
        discounts.forEach(function(discount) {
            const row = `
                <tr id="discount-row-${discount.discountId}">
                    <td>${discount.code}</td>
                    <td>${discount.description || ''}</td>
                    <td>${discount.percentage}%</td>
                    <td>${discount.validFrom || ''}</td>
                    <td>${discount.validTo || ''}</td>
                    <td><span class="badge bg-${discount.isActive ? 'success' : 'secondary'}">${discount.isActive ? 'Active' : 'Inactive'}</span></td>
                    <td>
                        <div class="btn-group" role="group">
                            <button class="btn btn-sm btn-outline-primary" onclick="openDiscountDialog('edit', ${discount.discountId})">Edit</button>
                            <button class="btn btn-sm btn-outline-danger" onclick="deleteDiscount(${discount.discountId})">Delete</button>
                        </div>
                    </td>
                </tr>
            `;
            tbody.append(row);
        });
    }

    function openDiscountDialog(mode, discountId = null) {
        clearValidationErrors();
        
        if (mode === 'add') {
            document.getElementById('discountModalLabel').innerText = 'Add Discount';
            document.getElementById('discountForm').reset();
            document.getElementById('discountId').value = '0';
            document.getElementById('discountIsActive').checked = true;
        } else if (mode === 'edit' && discountId) {
            document.getElementById('discountModalLabel').innerText = 'Edit Discount';
            document.getElementById('discountId').value = discountId;
            loadDiscountData(discountId);
        }
        
        var discountModal = new bootstrap.Modal(document.getElementById('discountModal'));
        discountModal.show();
    }
    
    function loadDiscountData(discountId) {
        // For simplicity, since we have the data in displayDiscounts, we can fetch again or store it.
        // For now, fetch from server
        fetch(`/Admin/GetDiscount/${discountId}`)
            .then(response => response.json())
            .then(data => {
                document.getElementById('discountCode').value = data.code;
                document.getElementById('discountDescription').value = data.description || '';
                document.getElementById('discountPercentage').value = data.percentage;
                document.getElementById('discountValidFrom').value = data.validFrom || '';
                document.getElementById('discountValidTo').value = data.validTo || '';
                document.getElementById('discountIsActive').checked = data.isActive;
            })
            .catch(error => {
                showAlert('Error loading discount data: ' + error.message, 'danger');
            });
    }
    
    function saveDiscount() {
        // Clear previous validation errors
        clearValidationErrors();
        
        const discountId = document.getElementById('discountId').value;
        const code = document.getElementById('discountCode').value;
        const description = document.getElementById('discountDescription').value;
        const percentage = parseInt(document.getElementById('discountPercentage').value);
        const validFrom = document.getElementById('discountValidFrom').value || null;
        const validTo = document.getElementById('discountValidTo').value || null;
        const isActive = document.getElementById('discountIsActive').checked;
        
        const formData = new FormData();
        formData.append('discountId', discountId);
        formData.append('code', code);
        formData.append('description', description);
        formData.append('percentage', percentage);
        if (validFrom) formData.append('validFrom', validFrom);
        if (validTo) formData.append('validTo', validTo);
        formData.append('isActive', isActive);
        
        const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value;
        if (token) {
            formData.append('__RequestVerificationToken', token);
        }
        
        fetch('@Url.Action("SaveDiscount", "Admin")', {
            method: 'POST',
            body: formData,
            headers: {
                'RequestVerificationToken': token
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showAlert(data.message, 'success');
                $('#discountModal').modal('hide');
                loadDiscounts();
            } else {
                showAlert(data.message, 'danger');
            }
        })
        .catch(error => {
            showAlert('Error saving discount: ' + error.message, 'danger');
        });
    }
    
    function deleteDiscount(discountId) {
        if (confirm('Are you sure you want to delete this discount?')) {
            fetch(`/Admin/DeleteDiscount/${discountId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showAlert(data.message, 'success');
                    document.getElementById(`discount-row-${discountId}`).remove();
                } else {
                    showAlert(data.message, 'danger');
                }
            })
            .catch(error => {
                showAlert('Error deleting discount: ' + error.message, 'danger');
            });
        }
    }
</script>

<!-- Anti-forgery token for AJAX requests -->
@Html.AntiForgeryToken()
</body>
</html>
