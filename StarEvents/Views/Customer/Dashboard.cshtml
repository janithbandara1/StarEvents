@model List<StarEvents.Models.Event>
@{
    ViewData["Title"] = "Customer Dashboard";
    Layout = null;
    ViewData["ActiveNav"] = "Dashboard";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - StarEvents</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/StarEvents.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
    <style>
        .navbar-brand {
            font-weight: bold;
            font-size: 1.5rem;
        }
        .event-card {
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
            height: 100%;
        }
        .event-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }
        .event-date {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 8px;
            padding: 8px 12px;
            font-weight: bold;
            display: inline-block;
        }
        .event-price {
            font-size: 1.25rem;
            font-weight: bold;
            color: #28a745;
        }
        .search-section {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 2rem 0;
        }
        .search-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            box-shadow: 0 8px 32px rgba(0,0,0,0.1);
        }
        .no-events {
            text-align: center;
            padding: 3rem;
            color: #6c757d;
        }
        .category-badge {
            background: #f8f9fa;
            color: #495057;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.8rem;
        }
        .event-description {
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
            min-height: 4.5rem;
        }
    </style>
</head>
<body>
    @await Html.PartialAsync("_CustomerNavbar")

    <!-- Search Section -->
    <section class="search-section">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-10">
                    <div class="search-card p-4">
                        <h2 class="text-center mb-4 text-dark">
                            <i class="bi bi-search me-2"></i>Discover Amazing Events
                        </h2>
                        <form id="searchForm">
                            <div class="row g-3">
                                <div class="col-md-3">
                                    <label for="searchText" class="form-label text-dark">Search Events</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-search"></i></span>
                                        <input type="text" class="form-control" id="searchText" placeholder="Event name or keyword...">
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <label for="categoryFilter" class="form-label text-dark">Category</label>
                                    <select class="form-select" id="categoryFilter">
                                        <option value="">All Categories</option>
                                        @if (ViewBag.Categories != null)
                                        {
                                            @foreach (string category in ViewBag.Categories)
                                            {
                                                <option value="@category">@category</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="col-md-3">
                                    <label for="dateFilter" class="form-label text-dark">Date</label>
                                    <input type="date" class="form-control" id="dateFilter">
                                </div>
                                <div class="col-md-3">
                                    <label for="locationFilter" class="form-label text-dark">Location</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-geo-alt"></i></span>
                                        <input type="text" class="form-control" id="locationFilter" placeholder="City or venue...">
                                    </div>
                                </div>
                            </div>
                            <div class="row mt-3">
                                <div class="col-12 text-center">
                                    <button type="submit" class="btn btn-primary btn-lg me-2">
                                        <i class="bi bi-search me-2"></i>Search Events
                                    </button>
                                    <button type="button" class="btn btn-outline-secondary btn-lg" onclick="clearFilters()">
                                        <i class="bi bi-arrow-clockwise me-2"></i>Clear Filters
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Events Section -->
    <section class="py-5">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h3><i class="bi bi-calendar-event me-2"></i>Upcoming Events</h3>
                <div id="eventsCount" class="text-muted">
                    @(Model?.Count ?? 0) events found
                </div>
            </div>
            
            <!-- Loading indicator -->
            <div id="loadingIndicator" class="text-center py-5" style="display: none;">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p class="mt-2">Searching events...</p>
            </div>

            <!-- Events Cards -->
            <div class="row" id="eventsContainer">
                @if (Model != null && Model.Any())
                {
                    @foreach (var eventItem in Model)
                    {
                        <div class="col-lg-4 col-md-6 mb-4">
                            <div class="card event-card h-100 border-0 shadow-sm">
                                <div class="card-body d-flex flex-column">
                                    <div class="d-flex justify-content-between align-items-start mb-3">
                                        <span class="event-date">
                                            <i class="bi bi-calendar-check me-1"></i>
                                            @eventItem.EventDate.ToString("MMM dd")
                                        </span>
                                        @if (!string.IsNullOrEmpty(eventItem.Category))
                                        {
                                            <span class="category-badge">@eventItem.Category</span>
                                        }
                                    </div>
                                    
                                    <h5 class="card-title mb-3">@eventItem.Title</h5>
                                    
                                    <div class="event-description text-muted mb-3">
                                        @(string.IsNullOrEmpty(eventItem.Description) ? "No description available." : eventItem.Description)
                                    </div>
                                    
                                    <div class="mt-auto">
                                        <div class="d-flex align-items-center mb-2">
                                            <i class="bi bi-geo-alt text-muted me-2"></i>
                                            <small class="text-muted">@eventItem.Location</small>
                                        </div>
                                        <div class="d-flex align-items-center mb-3">
                                            <i class="bi bi-clock text-muted me-2"></i>
                                            <small class="text-muted">@eventItem.EventDate.ToString("h:mm tt")</small>
                                        </div>
                                        
                                        <div class="d-flex justify-content-between align-items-center">
                                            <span class="event-price">$@eventItem.TicketPrice.ToString("0.00")</span>
                                            <button class="btn btn-primary btn-sm" onclick="showEventDetails(@eventItem.EventId)">
                                                <i class="bi bi-eye me-1"></i>View Details
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="col-12">
                        <div class="no-events">
                            <i class="bi bi-calendar-x display-1 text-muted mb-3"></i>
                            <h4>No Events Found</h4>
                            <p class="mb-0">There are currently no upcoming events. Check back later!</p>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>

    <!-- Event Details Modal -->
    <div class="modal fade" id="eventDetailsModal" tabindex="-1" aria-labelledby="eventDetailsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="eventDetailsModalLabel">Event Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="eventDetailsContent">
                    <!-- Event details will be loaded here -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-success" id="buyTicketBtn">
                        <i class="bi bi-ticket-perforated me-2"></i>Buy Ticket
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Profile Modal -->
    <div class="modal fade" id="profileModal" tabindex="-1" aria-labelledby="profileModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="profileModalLabel">Edit Profile</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="profileForm">
                        <input type="hidden" id="profileUserId" value="0" />
                        <div class="mb-3">
                            <label for="profileUserName" class="form-label">User Name *</label>
                            <input type="text" class="form-control" id="profileUserName" required />
                            <div class="invalid-feedback" id="profileUserName-error"></div>
                        </div>
                        <div class="mb-3">
                            <label for="profileEmail" class="form-label">Email *</label>
                            <input type="email" class="form-control" id="profileEmail" required />
                            <div class="invalid-feedback" id="profileEmail-error"></div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Role</label>
                            <input type="text" class="form-control" id="profileRole" readonly />
                            <small class="form-text text-muted">Role cannot be changed.</small>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Loyalty Points</label>
                            <input type="text" class="form-control" id="profileLoyaltyPoints" readonly />
                            <small class="form-text text-muted">Points earned from purchases.</small>
                        </div>
                        <div class="mb-3" id="profile-password-section">
                            <label for="profilePassword" class="form-label">New Password</label>
                            <input type="password" class="form-control" id="profilePassword" />
                            <div class="invalid-feedback" id="profilePassword-error"></div>
                            <small class="form-text text-muted">Leave blank to keep current password. Must be at least 6 characters if changing.</small>
                        </div>
                        <div class="mb-3" id="profile-confirm-password-section">
                            <label for="profileConfirmPassword" class="form-label">Confirm New Password</label>
                            <input type="password" class="form-control" id="profileConfirmPassword" />
                            <div class="invalid-feedback" id="profileConfirmPassword-error"></div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="saveProfile()">Save Changes</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        let currentEventId = null;

        $(document).ready(function() {
            // Form submission handler
            $('#searchForm').on('submit', function(e) {
                e.preventDefault();
                searchEvents();
            });

            // Real-time search on input change
            $('#searchText, #locationFilter').on('input', debounce(searchEvents, 500));
            $('#categoryFilter, #dateFilter').on('change', searchEvents);
        });

        function searchEvents() {
            $('#loadingIndicator').show();
            
            const searchData = {
                search: $('#searchText').val(),
                category: $('#categoryFilter').val(),
                date: $('#dateFilter').val(),
                location: $('#locationFilter').val()
            };

            $.get('@Url.Action("SearchEvents", "Customer")', searchData)
                .done(function(response) {
                    if (response.success) {
                        displayEvents(response.data);
                        updateEventsCount(response.data.length);
                    } else {
                        showAlert('Error', response.message, 'error');
                    }
                })
                .fail(function() {
                    showAlert('Error', 'Failed to search events. Please try again.', 'error');
                })
                .always(function() {
                    $('#loadingIndicator').hide();
                });
        }

        function displayEvents(events) {
            const container = $('#eventsContainer');
            container.empty();

            if (events.length === 0) {
                container.html(`
                    <div class="col-12">
                        <div class="no-events">
                            <i class="bi bi-search display-1 text-muted mb-3"></i>
                            <h4>No Events Found</h4>
                            <p class="mb-0">Try adjusting your search criteria.</p>
                        </div>
                    </div>
                `);
                return;
            }

            events.forEach(function(event) {
                const eventCard = `
                    <div class="col-lg-4 col-md-6 mb-4">
                        <div class="card event-card h-100 border-0 shadow-sm">
                            <div class="card-body d-flex flex-column">
                                <div class="d-flex justify-content-between align-items-start mb-3">
                                    <span class="event-date">
                                        <i class="bi bi-calendar-check me-1"></i>
                                        ${event.eventDate}
                                    </span>
                                    ${event.category ? `<span class="category-badge">${event.category}</span>` : ''}
                                </div>
                                
                                <h5 class="card-title mb-3">${event.title}</h5>
                                
                                <div class="event-description text-muted mb-3">
                                    ${event.description || 'No description available.'}
                                </div>
                                
                                <div class="mt-auto">
                                    <div class="d-flex align-items-center mb-2">
                                        <i class="bi bi-geo-alt text-muted me-2"></i>
                                        <small class="text-muted">${event.location}</small>
                                    </div>
                                    <div class="d-flex align-items-center mb-3">
                                        <i class="bi bi-clock text-muted me-2"></i>
                                        <small class="text-muted">${event.eventTime}</small>
                                    </div>
                                    
                                    <div class="d-flex justify-content-between align-items-center">
                                        <span class="event-price">$${parseFloat(event.ticketPrice).toFixed(2)}</span>
                                        <button class="btn btn-primary btn-sm" onclick="showEventDetails(${event.eventId})">
                                            <i class="bi bi-eye me-1"></i>View Details
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                container.append(eventCard);
            });
        }

        function updateEventsCount(count) {
            $('#eventsCount').text(count + ' events found');
        }

        function showEventDetails(eventId) {
            currentEventId = eventId;
            
            $.get('@Url.Action("GetEventDetails", "Customer")', { id: eventId })
                .done(function(response) {
                    if (response.success) {
                        const event = response.data;
                        const content = `
                            <div class="row">
                                <div class="col-md-8">
                                    <h4>${event.title}</h4>
                                    ${event.category ? `<span class="badge bg-secondary mb-3">${event.category}</span>` : ''}
                                    <p class="text-muted">${event.description || 'No description available.'}</p>
                                </div>
                                <div class="col-md-4">
                                    <div class="card bg-light">
                                        <div class="card-body">
                                            <h5 class="card-title text-success">$${parseFloat(event.ticketPrice).toFixed(2)}</h5>
                                            <hr>
                                            <p class="card-text">
                                                <i class="bi bi-calendar-check me-2"></i><strong>Date:</strong> ${event.eventDate}<br>
                                                <i class="bi bi-clock me-2"></i><strong>Time:</strong> ${event.eventTime}<br>
                                                <i class="bi bi-geo-alt me-2"></i><strong>Location:</strong> ${event.location}<br>
                                                <i class="bi bi-person me-2"></i><strong>Organizer:</strong> ${event.organizerName}
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr class="my-4">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="discountCode" class="form-label">Discount Code (Optional)</label>
                                        <input type="text" class="form-control" id="discountCode" placeholder="Enter discount code" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label">Loyalty Points</label>
                                        <div class="form-check">
                                            <input type="checkbox" class="form-check-input" id="useLoyaltyPoints" />
                                            <label class="form-check-label" for="useLoyaltyPoints">
                                                Use Loyalty Points (Available: <span id="availablePoints">0</span>)
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        `;
                        $('#eventDetailsContent').html(content);
                        $('#eventDetailsModal').modal('show');
                        
                        // Load loyalty points
                        loadLoyaltyPoints();
                    } else {
                        showAlert('Error', response.message, 'error');
                    }
                })
                .fail(function() {
                    showAlert('Error', 'Failed to load event details.', 'error');
                });
        }

        $('#buyTicketBtn').on('click', function() {
            if (currentEventId) {
                const discountCode = $('#discountCode').val();
                const useLoyaltyPoints = $('#useLoyaltyPoints').is(':checked');
                
                $.post('@Url.Action("CreateCheckoutSession", "Customer")', { 
                    eventId: currentEventId,
                    discountCode: discountCode,
                    useLoyaltyPoints: useLoyaltyPoints
                })
                    .done(function(response) {
                        if (response.success) {
                            window.location.href = response.url;
                        } else {
                            showAlert('Error', response.message, 'error');
                        }
                    })
                    .fail(function() {
                        showAlert('Error', 'Failed to initiate payment.', 'error');
                    });
            }
        });

        function loadLoyaltyPoints() {
            $.get('@Url.Action("GetLoyaltyPoints", "Customer")')
                .done(function(response) {
                    if (response.success) {
                        $('#availablePoints').text(response.points);
                    }
                })
                .fail(function() {
                    $('#availablePoints').text('0');
                });
        }

        function openProfileModal() {
            // Clear previous validation errors
            clearValidationErrors();
            
            // Load user data
            loadProfileData();
            
            var profileModal = new bootstrap.Modal(document.getElementById('profileModal'));
            profileModal.show();
        }
        
        function loadProfileData() {
            fetch('@Url.Action("GetProfile", "Customer")')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('profileUserId').value = data.userId;
                    document.getElementById('profileUserName').value = data.userName;
                    document.getElementById('profileEmail').value = data.email;
                    document.getElementById('profileRole').value = data.role;
                    // Clear password fields
                    document.getElementById('profilePassword').value = '';
                    document.getElementById('profileConfirmPassword').value = '';
                    
                    // Load loyalty points
                    loadLoyaltyPointsForProfile();
                })
                .catch(error => {
                    showAlert('Error loading profile data: ' + error.message, 'danger');
                });
        }
        
        function loadLoyaltyPointsForProfile() {
            $.get('@Url.Action("GetLoyaltyPoints", "Customer")')
                .done(function(response) {
                    if (response.success) {
                        document.getElementById('profileLoyaltyPoints').value = response.points;
                    }
                })
                .fail(function() {
                    document.getElementById('profileLoyaltyPoints').value = '0';
                });
        }
        
        function saveProfile() {
            // Clear previous validation errors
            clearValidationErrors();
            
            const formData = new FormData();
            formData.append('UserId', document.getElementById('profileUserId').value);
            formData.append('UserName', document.getElementById('profileUserName').value);
            formData.append('Email', document.getElementById('profileEmail').value);
            formData.append('Role', document.getElementById('profileRole').value);
            formData.append('Password', document.getElementById('profilePassword').value);
            formData.append('ConfirmPassword', document.getElementById('profileConfirmPassword').value);
            formData.append('IsEdit', true);
            
            // Add anti-forgery token
            const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value;
            if (token) {
                formData.append('__RequestVerificationToken', token);
            }
            
            fetch('@Url.Action("Profile", "Customer")', {
                method: 'POST',
                body: formData,
                headers: {
                    'RequestVerificationToken': token
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showAlert(data.message, 'success');
                    $('#profileModal').modal('hide');
                } else {
                    showAlert(data.message, 'danger');
                }
            })
            .catch(error => {
                showAlert('Error saving profile: ' + error.message, 'danger');
            });
        }
        
        function clearValidationErrors() {
            document.querySelectorAll('.is-invalid').forEach(el => el.classList.remove('is-invalid'));
            document.querySelectorAll('.invalid-feedback').forEach(el => el.textContent = '');
        }
        
        // Add validation for password confirmation
        document.getElementById('profileConfirmPassword').addEventListener('input', function() {
            const password = document.getElementById('profilePassword').value;
            const confirmPassword = this.value;
            
            if (password && confirmPassword && password !== confirmPassword) {
                this.classList.add('is-invalid');
                document.getElementById('profileConfirmPassword-error').textContent = 'Passwords do not match.';
            } else {
                this.classList.remove('is-invalid');
                document.getElementById('profileConfirmPassword-error').textContent = '';
            }
        });
    </script>
</body>
</html>